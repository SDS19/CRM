<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.crm" />

    <!-- Druid: database connection pools -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="${jdbc.maxActive}" />
    </bean>

    <!-- SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- set "druidDataSource" to dataSource property -->
        <property name="dataSource" ref="druidDataSource" />
        <!-- mybatis.xml (include: mapper + domain) -->
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>

    <!-- this class invoke getMapper(*dao.class) to generate the proxy of dao interface -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- scan all the dao in this package, invoke the getMapper() to get the dao object
        and put them in the spring container (the default name of dao object is like "userDao")-->
        <property name="basePackage" value="com.crm.settings.dao,com.crm.workbench.dao" />
    </bean>

    <bean id="dicService" class="com.crm.settings.service.impl.DicServiceImpl" />
</beans>